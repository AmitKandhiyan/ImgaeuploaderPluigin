<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</head>
<body>

<div class="container mt-3">
  <h2>Custom File</h2>
  <p>To create a custom file upload, wrap a container element with a class of .custom-file around the input with type="file". Then add the .custom-control-input to it:</p>
  <div>
    <p>Custom file:</p>
    <div class="custom-file mb-3">
      <input type="file" class="custom-file-input" id="customFile" name="filename">
      <label class="custom-file-label" for="customFile">Choose file</label>
    </div>
    <div class="custom-file">
      <p>Uploaded file:</p>
      <div class="uploaded-file"></div>
    </div>
    <div class="mt-3">
      <button type="submit" class="btn btn-primary">Submit</button>
    </div>
  </div>
</div>

<script>
  // Add the following code if you want the name of the file appear on select
  $(".custom-file-input").on("change", function() {
    getBase64($(this)[0].files[0]).then(result=>{
      var fileName = $(this).val().split("\\").pop();
    $('.uploaded-file').append(`<div class="row">
<div class="col-md-4 imagePrievew" style="height: 20px;width:auto;"><img src='${result}'></div>
<div class="col-md-4 imageName">${fileName}</div>
<div class="col-md-4 imageAction"><a href="/deleteImage" class="stretched-link">Delete</a></div>
                                </div>`)
  }
    ).catch(
      console.log()
    );
        //    $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
  });

  function getBase64(file) {
   return new Promise(function(resolve, reject) {
      var reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = function () {
        console.log(reader.result);
        resolve(reader.result);
      };
      reader.onerror = function (error) {
        console.log('Error: ', error);
        reject(error)
      };
    });
  }
</script>

</body>
</html>
